import React, { useState } from "react";
import Insecure from "@/assets/account_compromised.webp";

const generatePassword = (length: number, includeSymbols: boolean): string => {
  const lettersAndDigits =
    "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
  const symbols = "!@#$%^&*()_+[]{}|;:,.<>?/~`-=";
  const characters = includeSymbols
    ? lettersAndDigits + symbols
    : lettersAndDigits;

  let password = "";
  for (let i = 0; i < length; i++) {
    const randomIndex = Math.floor(Math.random() * characters.length);
    password += characters[randomIndex];
  }
  return password;
};

const Home = () => {
  const [passwordLength, setPasswordLength] = useState<number>(8);
  const [includeSymbols, setIncludeSymbols] = useState<boolean>(true);
  const [generatedPassword, setGeneratedPassword] = useState<string>(
    "Select your settings first"
  );

  const [clipboardMessage, setClipboardMessage] = useState<string>("");
  const handleGeneratePassword = () => {
    const newPassword = generatePassword(passwordLength, includeSymbols);
    setGeneratedPassword(newPassword);

    navigator.clipboard
      .writeText(newPassword)
      .then(() => {
        setClipboardMessage("Password copied to clipboard!");
      })
      .catch((err) => console.error("Error copying to clipboard:", err));
  };

  const handlePasswordLengthClick = (length: number) => {
    setPasswordLength(length);
  };

  const handleIncludeSymbolsChange = (
    event: React.ChangeEvent<HTMLInputElement>
  ) => {
    setIncludeSymbols(event.target.checked);
  };

  return (
    <section>
      <div className="main-container">
        <div className="main-title-text">
          <h1>
            Your BirthDate is <span>NOT</span> a secure password
          </h1>
        </div>
        <div className="left-and-right">
          <div className="left-section">
            <div className="image-and-secondary-title-container">
              <div className="left-image-container">
                <img src={Insecure} alt="insecure password image" />
              </div>
              <div className="texts-container">
              <div className="main-secondary-title">
                <h2>
                  Create a strong password with up to 16 characters in just<span> ONE </span>
                  click!
                </h2>
              </div>
              <div className="description-text">
                <p>
                  A strong password normally is made from numbers, upper and lowercase letters and symbols. Also, remember to never use the same password twice.
                </p>
              </div>
              </div>
            </div>
          </div>
          <div className="right-section">
            <div className="pass-and-remember-container">
            <div className="main-password-container">
              <div className="main-password-text">
                <p>{generatedPassword}</p>
              </div>
            </div>
            <div className="clipboard-alert-container">
              <p>{clipboardMessage}</p>
            </div>
            <div className="remember-text">
              <p>DISCLAIMER: We do not store any passwords generated by the website. Remember to keep them safe and never share them with anyone.</p>
            </div>
            </div>
            <div className="input-container">
              <label className="form-control">
                <input
                  type="radio"
                  name="length"
                  value="8"
                  checked={passwordLength === 8}
                  onClick={() => handlePasswordLengthClick(8)}
                />
                8 Characters
              </label>
              <label className="form-control">
                <input
                  type="radio"
                  name="length"
                  value="13"
                  onClick={() => handlePasswordLengthClick(13)}
                />
                13 Characters
              </label>
              <label className="form-control">
                <input
                  type="radio"
                  name="length"
                  value="16"
                  onClick={() => handlePasswordLengthClick(16)}
                />
                16 Characters
              </label>
              <label className="form-control">
                <input
                  type="checkbox"
                  id="includeSymbols"
                  checked={includeSymbols}
                  onChange={handleIncludeSymbolsChange}
                />
                Include Symbols
              </label>
              <div className="generate-password-button-container">
              <button onClick={handleGeneratePassword}>
                Generate Password
              </button>
            </div>
            </div>

          </div>
        </div>
      </div>
    </section>
  );
};

export default Home;
