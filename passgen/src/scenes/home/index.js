import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from "react";
import Insecure from "@/assets/account_compromised.webp";
const generatePassword = (length, includeSymbols) => {
    const lettersAndDigits = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
    const symbols = "!@#$%^&*()_+[]{}|;:,.<>?/~`-=";
    const characters = includeSymbols
        ? lettersAndDigits + symbols
        : lettersAndDigits;
    let password = "";
    for (let i = 0; i < length; i++) {
        const randomIndex = Math.floor(Math.random() * characters.length);
        password += characters[randomIndex];
    }
    return password;
};
const Home = () => {
    const [passwordLength, setPasswordLength] = useState(8);
    const [includeSymbols, setIncludeSymbols] = useState(true);
    const [generatedPassword, setGeneratedPassword] = useState("Select your settings first");
    const [clipboardMessage, setClipboardMessage] = useState("");
    const handleGeneratePassword = () => {
        const newPassword = generatePassword(passwordLength, includeSymbols);
        setGeneratedPassword(newPassword);
        navigator.clipboard
            .writeText(newPassword)
            .then(() => {
            setClipboardMessage("Password copied to clipboard!");
        })
            .catch((err) => console.error("Error copying to clipboard:", err));
    };
    const handlePasswordLengthClick = (length) => {
        setPasswordLength(length);
    };
    const handleIncludeSymbolsChange = (event) => {
        setIncludeSymbols(event.target.checked);
    };
    return (_jsx("section", { children: _jsxs("div", { className: "main-container", children: [_jsx("div", { className: "main-title-text", children: _jsxs("h1", { children: ["Your BirthDate is ", _jsx("span", { children: "NOT" }), " a secure password"] }) }), _jsxs("div", { className: "left-and-right", children: [_jsx("div", { className: "left-section", children: _jsxs("div", { className: "image-and-secondary-title-container", children: [_jsx("div", { className: "left-image-container", children: _jsx("img", { src: Insecure, alt: "insecure password image" }) }), _jsxs("div", { className: "texts-container", children: [_jsx("div", { className: "main-secondary-title", children: _jsxs("h2", { children: ["Create a strong password with up to 16 characters in just", _jsx("span", { children: " ONE " }), "click!"] }) }), _jsx("div", { className: "description-text", children: _jsx("p", { children: "A strong password normally is made from numbers, upper and lowercase letters and symbols. Also, remember to never use the same password twice." }) })] })] }) }), _jsxs("div", { className: "right-section", children: [_jsxs("div", { className: "pass-and-remember-container", children: [_jsx("div", { className: "main-password-container", children: _jsx("div", { className: "main-password-text", children: _jsx("p", { children: generatedPassword }) }) }), _jsx("div", { className: "clipboard-alert-container", children: _jsx("p", { children: clipboardMessage }) }), _jsx("div", { className: "remember-text", children: _jsx("p", { children: "DISCLAIMER: We do not store any passwords generated by the website. Remember to keep them safe and never share them with anyone." }) })] }), _jsxs("div", { className: "input-container", children: [_jsxs("label", { className: "form-control", children: [_jsx("input", { type: "radio", name: "length", value: "8", checked: passwordLength === 8, onClick: () => handlePasswordLengthClick(8) }), "8 Characters"] }), _jsxs("label", { className: "form-control", children: [_jsx("input", { type: "radio", name: "length", value: "13", onClick: () => handlePasswordLengthClick(13) }), "13 Characters"] }), _jsxs("label", { className: "form-control", children: [_jsx("input", { type: "radio", name: "length", value: "16", onClick: () => handlePasswordLengthClick(16) }), "16 Characters"] }), _jsxs("label", { className: "form-control", children: [_jsx("input", { type: "checkbox", id: "includeSymbols", checked: includeSymbols, onChange: handleIncludeSymbolsChange }), "Include Symbols"] }), _jsx("div", { className: "generate-password-button-container", children: _jsx("button", { onClick: handleGeneratePassword, children: "Generate Password" }) })] })] })] })] }) }));
};
export default Home;
